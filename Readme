Flask Chatbot with Azure OpenAI

Overview

This project is a simple chatbot built using Flask and Azure OpenAI. It maintains chat history for each user and interacts with Azure OpenAI's chat completion API to generate responses.

Features

Uses Azure OpenAI's chat completion API

Maintains conversation history for each user

Exposes a REST API endpoint for chat interactions

Supports configurable AI model deployment

Prerequisites

Before running the application, ensure you have:

Python installed (>=3.7 recommended)

Flask installed (pip install flask)

OpenAI SDK installed (pip install openai)

An Azure OpenAI account with an API key and deployment set up

Installation

Clone the repository:

git clone https://github.com/your-repo/flask-chatbot.git
cd flask-chatbot

Install dependencies:

pip install -r requirements.txt

Configure Azure OpenAI credentials:

Replace the following placeholders in app.py with your actual values:

AZURE_OPENAI_ENDPOINT = "YOUR_AZURE_AI_ENDPOINT"
AZURE_OPENAI_KEY = "YOUR_AZURE_AI_API_KEY"
DEPLOYMENT_NAME = "YOUR_AZURE_AI_API_DEPLOYMENT_NAME"

Usage

Start the Flask application:

python app.py

Send a POST request to the /chat endpoint:

curl -X POST "http://localhost:5000/chat" -H "Content-Type: application/json" -d '{"user_id": "123", "message": "Hello!"}'

Example JSON response:

{
    "user": "Hello!",
    "ai": "Hi there! How can I assist you today?"
}

API Endpoint

POST /chat

Description: Sends a message to the chatbot and receives a response.

Request Body:

{
    "user_id": "unique_user_id",
    "message": "User's input message"
}

Response:

{
    "user": "User's input message",
    "ai": "Chatbot's response"
}

License

This project is open-source and available under the MIT License.
