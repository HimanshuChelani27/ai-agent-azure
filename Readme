Flask Chatbot with Azure OpenAI
This project is a simple chatbot built using Flask and Azure OpenAI. It maintains chat history for each user and interacts with Azure OpenAI's chat completion API to generate responses.

‚ú® Features
Utilizes Azure OpenAI's chat completion API for generating responses.

Maintains conversation history for each user session.

Exposes a REST API endpoint for chat interactions.

Supports configurable AI model deployment.

üìã Prerequisites
Before running the application, ensure you have:

Python (>= 3.7 recommended)

Flask (pip install flask)

OpenAI SDK (pip install openai)

An Azure OpenAI account with an API key and model deployment.

üì¶ Installation
Clone the repository:

bash
Copy
Edit
git clone https://github.com/HimanshuChelani/ai-agent-azure.git
cd flask-chatbot
Install dependencies:

bash
Copy
Edit
pip install -r requirements.txt
Configure Azure OpenAI credentials:

Update the following placeholders in app.py with your actual Azure OpenAI values:

python
Copy
Edit
AZURE_OPENAI_ENDPOINT = "YOUR_AZURE_AI_ENDPOINT"
AZURE_OPENAI_KEY = "YOUR_AZURE_AI_API_KEY"
DEPLOYMENT_NAME = "YOUR_AZURE_AI_API_DEPLOYMENT_NAME"
‚ñ∂Ô∏è Usage
Start the Flask application:

bash
Copy
Edit
python app.py
Send a POST request to the /chat endpoint:

Example using curl:

bash
Copy
Edit
curl -X POST "http://localhost:5000/chat" \
     -H "Content-Type: application/json" \
     -d '{"user_id": "123", "message": "Hello!"}'
Example JSON response:

json
Copy
Edit
{
  "user": "Hello!",
  "ai": "Hi there! How can I assist you today?"
}
üìå API Endpoint
POST /chat
Description: Sends a message to the chatbot and receives a response.

Request Body:

json
Copy
Edit
{
  "user_id": "unique_user_id",
  "message": "User's input message"
}
Response:

json
Copy
Edit
{
  "user": "User's input message",
  "ai": "Chatbot's response"
}
üìÑ License
This project is open-source and available under the MIT License.
